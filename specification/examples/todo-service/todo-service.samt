import tools.samt.examples.common.UUID
import tools.samt.examples.common.NotFoundFault
import tools.samt.examples.common.MissingPermissionsFault

package tools.samt.examples.todo

record TodoItem {
    id: UUID
    title: String ( size(1..*) )
    description: String ( size(0..1000) )
    completed: Boolean
}

record TodoList {
    id: UUID
    title: String ( size(1..*) )
    items: List<TodoItem>
}

@Description("A service for managing todo items")
service TodoManager {
    createTodo(title: String, description: String, session: String): TodoItem
    searchTodo(title: String): TodoItem?
    getTodo(id: UUID): TodoItem raises NotFoundFault
    getTodos(): List<TodoItem>
    updateTodo(
        id: UUID,
        newTitle: String? ( size(1..*) ),
        newDescription: String? ( size(0..1000) )
    ) raises NotFoundFault, MissingPermissionsFault
    deleteTodo(id: UUID) raises NotFoundFault, MissingPermissionsFault
    markAsCompleted(id: UUID) raises NotFoundFault, MissingPermissionsFault
}

@Description("A service for managing todo lists")
service TodoListManager {
    createTodoList(title: String): TodoList
    searchTodoList(title: String): TodoList?
    getTodoList(id: UUID): TodoList raises NotFoundFault
    getTodoLists(): List<TodoList>
    updateTodoList(
        id: UUID,
        newTitle: String? ( size(1..*) )
    ) raises NotFoundFault, MissingPermissionsFault
    deleteTodoList(id: UUID) raises NotFoundFault, MissingPermissionsFault
    addTodoToList(listId: UUID, todoId: UUID) raises NotFoundFault, MissingPermissionsFault
    removeTodoFromList(listId: UUID, todoId: UUID) raises NotFoundFault, MissingPermissionsFault
}
